// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: codingpb/codingpb.proto

package codingpb

import (
	contextstorepb "github.com/filecoin-project/mir/pkg/pb/contextstorepb"
	dslpb "github.com/filecoin-project/mir/pkg/pb/dslpb"
	_ "github.com/filecoin-project/mir/pkg/pb/mir"
	_ "github.com/filecoin-project/mir/pkg/pb/net"
	requestpb "github.com/filecoin-project/mir/pkg/pb/requestpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Event_EncodeRequest
	//	*Event_EncodeResult
	//	*Event_DecodeRequest
	//	*Event_DecodeResult
	//	*Event_RebuildRequest
	//	*Event_RebuildResult
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetEncodeRequest() *EncodeRequest {
	if x, ok := x.GetType().(*Event_EncodeRequest); ok {
		return x.EncodeRequest
	}
	return nil
}

func (x *Event) GetEncodeResult() *EncodeResult {
	if x, ok := x.GetType().(*Event_EncodeResult); ok {
		return x.EncodeResult
	}
	return nil
}

func (x *Event) GetDecodeRequest() *DecodeRequest {
	if x, ok := x.GetType().(*Event_DecodeRequest); ok {
		return x.DecodeRequest
	}
	return nil
}

func (x *Event) GetDecodeResult() *DecodeResult {
	if x, ok := x.GetType().(*Event_DecodeResult); ok {
		return x.DecodeResult
	}
	return nil
}

func (x *Event) GetRebuildRequest() *RebuildRequest {
	if x, ok := x.GetType().(*Event_RebuildRequest); ok {
		return x.RebuildRequest
	}
	return nil
}

func (x *Event) GetRebuildResult() *RebuildResult {
	if x, ok := x.GetType().(*Event_RebuildResult); ok {
		return x.RebuildResult
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_EncodeRequest struct {
	EncodeRequest *EncodeRequest `protobuf:"bytes,1,opt,name=encodeRequest,proto3,oneof"`
}

type Event_EncodeResult struct {
	EncodeResult *EncodeResult `protobuf:"bytes,2,opt,name=encodeResult,proto3,oneof"`
}

type Event_DecodeRequest struct {
	DecodeRequest *DecodeRequest `protobuf:"bytes,3,opt,name=decodeRequest,proto3,oneof"`
}

type Event_DecodeResult struct {
	DecodeResult *DecodeResult `protobuf:"bytes,4,opt,name=decodeResult,proto3,oneof"`
}

type Event_RebuildRequest struct {
	RebuildRequest *RebuildRequest `protobuf:"bytes,5,opt,name=rebuildRequest,proto3,oneof"`
}

type Event_RebuildResult struct {
	RebuildResult *RebuildResult `protobuf:"bytes,6,opt,name=rebuildResult,proto3,oneof"`
}

func (*Event_EncodeRequest) isEvent_Type() {}

func (*Event_EncodeResult) isEvent_Type() {}

func (*Event_DecodeRequest) isEvent_Type() {}

func (*Event_DecodeResult) isEvent_Type() {}

func (*Event_RebuildRequest) isEvent_Type() {}

func (*Event_RebuildResult) isEvent_Type() {}

type EncodeOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*EncodeOrigin_ContextStore
	//	*EncodeOrigin_Request
	//	*EncodeOrigin_Dsl
	Type isEncodeOrigin_Type `protobuf_oneof:"type"`
}

func (x *EncodeOrigin) Reset() {
	*x = EncodeOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeOrigin) ProtoMessage() {}

func (x *EncodeOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeOrigin.ProtoReflect.Descriptor instead.
func (*EncodeOrigin) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{1}
}

func (x *EncodeOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *EncodeOrigin) GetType() isEncodeOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *EncodeOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*EncodeOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *EncodeOrigin) GetRequest() *requestpb.Request {
	if x, ok := x.GetType().(*EncodeOrigin_Request); ok {
		return x.Request
	}
	return nil
}

func (x *EncodeOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*EncodeOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isEncodeOrigin_Type interface {
	isEncodeOrigin_Type()
}

type EncodeOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type EncodeOrigin_Request struct {
	Request *requestpb.Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type EncodeOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,4,opt,name=dsl,proto3,oneof"`
}

func (*EncodeOrigin_ContextStore) isEncodeOrigin_Type() {}

func (*EncodeOrigin_Request) isEncodeOrigin_Type() {}

func (*EncodeOrigin_Dsl) isEncodeOrigin_Type() {}

type EncodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalShards int64         `protobuf:"varint,1,opt,name=totalShards,proto3" json:"totalShards,omitempty"`
	DataShards  int64         `protobuf:"varint,2,opt,name=dataShards,proto3" json:"dataShards,omitempty"`
	PaddedData  []byte        `protobuf:"bytes,3,opt,name=paddedData,proto3" json:"paddedData,omitempty"`
	Origin      *EncodeOrigin `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *EncodeRequest) Reset() {
	*x = EncodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeRequest) ProtoMessage() {}

func (x *EncodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeRequest.ProtoReflect.Descriptor instead.
func (*EncodeRequest) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{2}
}

func (x *EncodeRequest) GetTotalShards() int64 {
	if x != nil {
		return x.TotalShards
	}
	return 0
}

func (x *EncodeRequest) GetDataShards() int64 {
	if x != nil {
		return x.DataShards
	}
	return 0
}

func (x *EncodeRequest) GetPaddedData() []byte {
	if x != nil {
		return x.PaddedData
	}
	return nil
}

func (x *EncodeRequest) GetOrigin() *EncodeOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type EncodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoded [][]byte      `protobuf:"bytes,1,rep,name=encoded,proto3" json:"encoded,omitempty"`
	Origin  *EncodeOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *EncodeResult) Reset() {
	*x = EncodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeResult) ProtoMessage() {}

func (x *EncodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeResult.ProtoReflect.Descriptor instead.
func (*EncodeResult) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{3}
}

func (x *EncodeResult) GetEncoded() [][]byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *EncodeResult) GetOrigin() *EncodeOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type DecodeOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*DecodeOrigin_ContextStore
	//	*DecodeOrigin_Request
	//	*DecodeOrigin_Dsl
	Type isDecodeOrigin_Type `protobuf_oneof:"type"`
}

func (x *DecodeOrigin) Reset() {
	*x = DecodeOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeOrigin) ProtoMessage() {}

func (x *DecodeOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeOrigin.ProtoReflect.Descriptor instead.
func (*DecodeOrigin) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{4}
}

func (x *DecodeOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *DecodeOrigin) GetType() isDecodeOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *DecodeOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*DecodeOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *DecodeOrigin) GetRequest() *requestpb.Request {
	if x, ok := x.GetType().(*DecodeOrigin_Request); ok {
		return x.Request
	}
	return nil
}

func (x *DecodeOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*DecodeOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isDecodeOrigin_Type interface {
	isDecodeOrigin_Type()
}

type DecodeOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type DecodeOrigin_Request struct {
	Request *requestpb.Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type DecodeOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,4,opt,name=dsl,proto3,oneof"`
}

func (*DecodeOrigin_ContextStore) isDecodeOrigin_Type() {}

func (*DecodeOrigin_Request) isDecodeOrigin_Type() {}

func (*DecodeOrigin_Dsl) isDecodeOrigin_Type() {}

type DecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalShards int64         `protobuf:"varint,1,opt,name=totalShards,proto3" json:"totalShards,omitempty"`
	DataShards  int64         `protobuf:"varint,2,opt,name=dataShards,proto3" json:"dataShards,omitempty"`
	Shares      []*Share      `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	Origin      *DecodeOrigin `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *DecodeRequest) Reset() {
	*x = DecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRequest) ProtoMessage() {}

func (x *DecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRequest.ProtoReflect.Descriptor instead.
func (*DecodeRequest) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{5}
}

func (x *DecodeRequest) GetTotalShards() int64 {
	if x != nil {
		return x.TotalShards
	}
	return 0
}

func (x *DecodeRequest) GetDataShards() int64 {
	if x != nil {
		return x.DataShards
	}
	return 0
}

func (x *DecodeRequest) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *DecodeRequest) GetOrigin() *DecodeOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type Share struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Chunk  []byte `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *Share) Reset() {
	*x = Share{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{6}
}

func (x *Share) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Share) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type DecodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Decoded []byte        `protobuf:"bytes,2,opt,name=decoded,proto3" json:"decoded,omitempty"`
	Origin  *DecodeOrigin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *DecodeResult) Reset() {
	*x = DecodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeResult) ProtoMessage() {}

func (x *DecodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeResult.ProtoReflect.Descriptor instead.
func (*DecodeResult) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{7}
}

func (x *DecodeResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DecodeResult) GetDecoded() []byte {
	if x != nil {
		return x.Decoded
	}
	return nil
}

func (x *DecodeResult) GetOrigin() *DecodeOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type RebuildOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*RebuildOrigin_ContextStore
	//	*RebuildOrigin_Request
	//	*RebuildOrigin_Dsl
	Type isRebuildOrigin_Type `protobuf_oneof:"type"`
}

func (x *RebuildOrigin) Reset() {
	*x = RebuildOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildOrigin) ProtoMessage() {}

func (x *RebuildOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildOrigin.ProtoReflect.Descriptor instead.
func (*RebuildOrigin) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{8}
}

func (x *RebuildOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *RebuildOrigin) GetType() isRebuildOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RebuildOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*RebuildOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *RebuildOrigin) GetRequest() *requestpb.Request {
	if x, ok := x.GetType().(*RebuildOrigin_Request); ok {
		return x.Request
	}
	return nil
}

func (x *RebuildOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*RebuildOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isRebuildOrigin_Type interface {
	isRebuildOrigin_Type()
}

type RebuildOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type RebuildOrigin_Request struct {
	Request *requestpb.Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type RebuildOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,4,opt,name=dsl,proto3,oneof"`
}

func (*RebuildOrigin_ContextStore) isRebuildOrigin_Type() {}

func (*RebuildOrigin_Request) isRebuildOrigin_Type() {}

func (*RebuildOrigin_Dsl) isRebuildOrigin_Type() {}

type RebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalShards int64          `protobuf:"varint,1,opt,name=totalShards,proto3" json:"totalShards,omitempty"`
	DataShards  int64          `protobuf:"varint,2,opt,name=dataShards,proto3" json:"dataShards,omitempty"`
	Shares      []*Share       `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	Origin      *RebuildOrigin `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *RebuildRequest) Reset() {
	*x = RebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildRequest) ProtoMessage() {}

func (x *RebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildRequest.ProtoReflect.Descriptor instead.
func (*RebuildRequest) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{9}
}

func (x *RebuildRequest) GetTotalShards() int64 {
	if x != nil {
		return x.TotalShards
	}
	return 0
}

func (x *RebuildRequest) GetDataShards() int64 {
	if x != nil {
		return x.DataShards
	}
	return 0
}

func (x *RebuildRequest) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *RebuildRequest) GetOrigin() *RebuildOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type RebuildResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Decoded []byte         `protobuf:"bytes,2,opt,name=decoded,proto3" json:"decoded,omitempty"`
	Origin  *RebuildOrigin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *RebuildResult) Reset() {
	*x = RebuildResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codingpb_codingpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildResult) ProtoMessage() {}

func (x *RebuildResult) ProtoReflect() protoreflect.Message {
	mi := &file_codingpb_codingpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildResult.ProtoReflect.Descriptor instead.
func (*RebuildResult) Descriptor() ([]byte, []int) {
	return file_codingpb_codingpb_proto_rawDescGZIP(), []int{10}
}

func (x *RebuildResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RebuildResult) GetDecoded() []byte {
	if x != nil {
		return x.Decoded
	}
	return nil
}

func (x *RebuildResult) GetOrigin() *RebuildOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

var File_codingpb_codingpb_proto protoreflect.FileDescriptor

var file_codingpb_codingpb_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x1a, 0x1c, 0x6d, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x6e, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2f, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9e, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x0d, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3a,
	0x04, 0x90, 0xa6, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x04, 0x80,
	0xa6, 0x1d, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x4e, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x82, 0xa6, 0x1d, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x73, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48,
	0x00, 0x52, 0x03, 0x64, 0x73, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa7,
	0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x5e, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x4e, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x82, 0xa6, 0x1d, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x44, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x73, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x73, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x35, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x78, 0x0a,
	0x0c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0xf9, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x4e, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x82, 0xa6, 0x1d, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x44, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x73, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x73, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x7a, 0x0a, 0x0d, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x3a, 0x04,
	0x98, 0xa6, 0x1d, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_codingpb_codingpb_proto_rawDescOnce sync.Once
	file_codingpb_codingpb_proto_rawDescData = file_codingpb_codingpb_proto_rawDesc
)

func file_codingpb_codingpb_proto_rawDescGZIP() []byte {
	file_codingpb_codingpb_proto_rawDescOnce.Do(func() {
		file_codingpb_codingpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_codingpb_codingpb_proto_rawDescData)
	})
	return file_codingpb_codingpb_proto_rawDescData
}

var file_codingpb_codingpb_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_codingpb_codingpb_proto_goTypes = []interface{}{
	(*Event)(nil),                 // 0: codingpb.Event
	(*EncodeOrigin)(nil),          // 1: codingpb.EncodeOrigin
	(*EncodeRequest)(nil),         // 2: codingpb.EncodeRequest
	(*EncodeResult)(nil),          // 3: codingpb.EncodeResult
	(*DecodeOrigin)(nil),          // 4: codingpb.DecodeOrigin
	(*DecodeRequest)(nil),         // 5: codingpb.DecodeRequest
	(*Share)(nil),                 // 6: codingpb.Share
	(*DecodeResult)(nil),          // 7: codingpb.DecodeResult
	(*RebuildOrigin)(nil),         // 8: codingpb.RebuildOrigin
	(*RebuildRequest)(nil),        // 9: codingpb.RebuildRequest
	(*RebuildResult)(nil),         // 10: codingpb.RebuildResult
	(*contextstorepb.Origin)(nil), // 11: contextstorepb.Origin
	(*requestpb.Request)(nil),     // 12: requestpb.Request
	(*dslpb.Origin)(nil),          // 13: dslpb.Origin
}
var file_codingpb_codingpb_proto_depIdxs = []int32{
	2,  // 0: codingpb.Event.encodeRequest:type_name -> codingpb.EncodeRequest
	3,  // 1: codingpb.Event.encodeResult:type_name -> codingpb.EncodeResult
	5,  // 2: codingpb.Event.decodeRequest:type_name -> codingpb.DecodeRequest
	7,  // 3: codingpb.Event.decodeResult:type_name -> codingpb.DecodeResult
	9,  // 4: codingpb.Event.rebuildRequest:type_name -> codingpb.RebuildRequest
	10, // 5: codingpb.Event.rebuildResult:type_name -> codingpb.RebuildResult
	11, // 6: codingpb.EncodeOrigin.context_store:type_name -> contextstorepb.Origin
	12, // 7: codingpb.EncodeOrigin.request:type_name -> requestpb.Request
	13, // 8: codingpb.EncodeOrigin.dsl:type_name -> dslpb.Origin
	1,  // 9: codingpb.EncodeRequest.origin:type_name -> codingpb.EncodeOrigin
	1,  // 10: codingpb.EncodeResult.origin:type_name -> codingpb.EncodeOrigin
	11, // 11: codingpb.DecodeOrigin.context_store:type_name -> contextstorepb.Origin
	12, // 12: codingpb.DecodeOrigin.request:type_name -> requestpb.Request
	13, // 13: codingpb.DecodeOrigin.dsl:type_name -> dslpb.Origin
	6,  // 14: codingpb.DecodeRequest.shares:type_name -> codingpb.Share
	4,  // 15: codingpb.DecodeRequest.origin:type_name -> codingpb.DecodeOrigin
	4,  // 16: codingpb.DecodeResult.origin:type_name -> codingpb.DecodeOrigin
	11, // 17: codingpb.RebuildOrigin.context_store:type_name -> contextstorepb.Origin
	12, // 18: codingpb.RebuildOrigin.request:type_name -> requestpb.Request
	13, // 19: codingpb.RebuildOrigin.dsl:type_name -> dslpb.Origin
	6,  // 20: codingpb.RebuildRequest.shares:type_name -> codingpb.Share
	8,  // 21: codingpb.RebuildRequest.origin:type_name -> codingpb.RebuildOrigin
	8,  // 22: codingpb.RebuildResult.origin:type_name -> codingpb.RebuildOrigin
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_codingpb_codingpb_proto_init() }
func file_codingpb_codingpb_proto_init() {
	if File_codingpb_codingpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_codingpb_codingpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Share); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codingpb_codingpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_codingpb_codingpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_EncodeRequest)(nil),
		(*Event_EncodeResult)(nil),
		(*Event_DecodeRequest)(nil),
		(*Event_DecodeResult)(nil),
		(*Event_RebuildRequest)(nil),
		(*Event_RebuildResult)(nil),
	}
	file_codingpb_codingpb_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EncodeOrigin_ContextStore)(nil),
		(*EncodeOrigin_Request)(nil),
		(*EncodeOrigin_Dsl)(nil),
	}
	file_codingpb_codingpb_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DecodeOrigin_ContextStore)(nil),
		(*DecodeOrigin_Request)(nil),
		(*DecodeOrigin_Dsl)(nil),
	}
	file_codingpb_codingpb_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*RebuildOrigin_ContextStore)(nil),
		(*RebuildOrigin_Request)(nil),
		(*RebuildOrigin_Dsl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_codingpb_codingpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_codingpb_codingpb_proto_goTypes,
		DependencyIndexes: file_codingpb_codingpb_proto_depIdxs,
		MessageInfos:      file_codingpb_codingpb_proto_msgTypes,
	}.Build()
	File_codingpb_codingpb_proto = out.File
	file_codingpb_codingpb_proto_rawDesc = nil
	file_codingpb_codingpb_proto_goTypes = nil
	file_codingpb_codingpb_proto_depIdxs = nil
}
